TASK SKETCH:

  new_user_handler:

    - exclude yourself
    - apply banning rules                   → expulsion user
                                            - delete join message
      (for no bot)
    - apply full restrictions
    - send captcha                          → thread (job)
    - save info: Admission, GCaptcha
    - throw greeting                        → thread (job)

  left_user_handler:

    - if the bot throws it out              → delete message
    - stop captchas timer
    - delete group captcha
    - modify private captcha
    - delete info: Admission, Restriction

  group_talk_handler:

    - check for spam
      - apply strikes rules
    - new user on hold?                     → delete message
    - new recent user?                      → delete multimedia message
      - If the restriction time ends        → delete info: Restriction
    - if anyone greeted                     → cancel pending greetings
    - cancel greeting grouping

  captcha_handler:

    - verify identity
    - new token?                            → change captcha
    - token correct?
      - in group:                           → change text/status in group
      - in private:                         → change text/status in private/group
      - save info: Restriction
      - apply temp restrictions
    - incorrect token?
      - in group:                           → change text/status in group
                                            - send link to private
      - in private:                         → change text/status in private

  captcha_thread:                           (waiting time is over to solve captcha)

    - delete group captcha
    - if status is WAITING (private)        → modify private captcha
    - not correct state                     → expulsion user
                                            - delete join message
                                            - delete info: Admission, Restriction

  greeting_thread:                          (waiting time is over: greet the users)

    - per user with captcha not waiting
      - reobtain user data
      - apply banning rules                 → expulsion user
                                            - delete join message
                                            - delete info: Restriction
      - delete info: Admission
      - make a list of names (if greet=True and with previous)
      - send greeting
      - delete previous greeting
      - save previous



DATA STRUCTURE IN RAM:

  mem = {
      user_id: {
          'menus': {
              'num• title': chat_id,            deleted in every request
          },
          'waits': {
              chat_id: OBJ_job,                 to cancel ahead of time
          },
      }
  }

  ENUM MenuStep:        STOP, INIT, CHAT
  ENUM UserRestriction: NONE, TEMP, FULL
  ENUM CaptchaStatus:   WAITING, SOLVED, WRONG
  ENUM CaptchaLocation: GROUP, PRIVATE
  ENUM DBDelete         NONE, USER, ADMISSION, RESTRICTION, EXPULSION



SEARCH ORDER:

  update.effective_chat:

    update.message.from_user
    update.edited_message.from_user
    update.inline_query.from_user
    update.chosen_inline_result.from_user
    update.callback_query.from_user
    update.shipping_query.from_user
    update.pre_checkout_query.from_user

  update.effective_user:

    update.message.chat
    update.edited_message.chat
    update.callback_query.message.chat
    update.channel_post.chat
    update.edited_channel_post.chat

  update.effective_message:

    update.message
    update.edited_message
    update.callback_query.message
    update.channel_post
    update.edited_channel_post



READINGS:

  https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard
